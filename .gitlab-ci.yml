stages:
  - build
  - development
  - preproduction
  - production

build-and-push-images:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_PASS: ""
  before_script:
    - apk add py3-pip gcc musl-dev python3-dev libffi-dev openssl openssl-dev cargo make
    - pip install --upgrade pip
    - pip install azure-cli
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
    - docker login -u${DOCKER_USER} -p${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
  script:
    - docker build -t ${DOCKER_REGISTRY}/portal-drupal-fpm:latest -t ${DOCKER_REGISTRY}/portal-drupal-fpm:${CI_COMMIT_REF_SLUG} -t portal-drupal-fpm -f Dockerfile-drupal .
    - docker build -t ${DOCKER_REGISTRY}/portal-nginx-drupal:latest -t ${DOCKER_REGISTRY}/portal-nginx-drupal:${CI_COMMIT_REF_SLUG} -t portal-nginx-drupal -f Dockerfile-nginx .
    - docker push --all-tags ${DOCKER_REGISTRY}/portal-nginx-drupal
    - docker push --all-tags ${DOCKER_REGISTRY}/portal-drupal-fpm
  only:
    - develop
    - /^release\//
    - feature/pipeline-improvements

update-container-app:
  image: mcr.microsoft.com/azure-cli
  stage: development
  environment:
    name: development
    url: https://essex-gov-pp.nomensa.xyz/
  before_script:
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
  script:
    - echo "Creating new revision of Container App"
    - az containerapp revision copy --name portal --resource-group rg-ecc-portal-uks-dev --revision-suffix build-${CI_PIPELINE_ID}
  rules:
    - when: manual

deploy-to-preprod:
  image: mcr.microsoft.com/azure-cli
  stage: preproduction
  environment:
    name: preproduction
    url: https://essex-gov-pp.nomensa.xyz/
  before_script:
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
  script:
    - echo "Creating new revision of Container App"
    - az acr import --name acreccukspreprod --source acreccuksdev.azurecr.io/portal-nginx-drupal:${CI_COMMIT_REF_SLUG} --image portal-nginx-drupal:${CI_COMMIT_REF_SLUG}
  rules:
    - if: '$CI_COMMIT_BRANCH == "/^release\//"'
      when: manual

deploy-to-prod:
  image: mcr.microsoft.com/azure-cli
  stage: production
  environment:
    name: production
    url: https://essex.gov.uk/
  before_script:
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
  script:
    - echo "Creating new revision of Container App"
    - az acr import --name acreccuksprod --source acreccukspreprod.azurecr.io/portal-nginx-drupal:${CI_COMMIT_REF_SLUG} --image portal-nginx-drupal:${CI_COMMIT_REF_SLUG}
  rules:
    - if: '$CI_COMMIT_BRANCH == "/^release\//"'
      when: manual
